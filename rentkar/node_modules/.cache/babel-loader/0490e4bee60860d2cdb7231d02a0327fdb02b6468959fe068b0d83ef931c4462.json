{"ast":null,"code":"var _jsxFileName = \"/Users/ashish/Desktop/rentkar/rentkar/src/App.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './actions/todoActions'\nfunction App() {\n  const [newTodo, setNewTodo] = useState('');\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos.todos);\n  const loading = useSelector(state => state.todos.loading);\n\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  const handleAddTodo = () => {\n    dispatch(addTodo(newTodo));\n    setNewTodo('');\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    dispatch(updateTodo(id, { completed: !completed }));\n  };\n\n  const handleDeleteTodo = (id) => {\n    dispatch(deleteTodo(id));\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {todos.map(todo => (\n            <li key={todo._id}>\n              <span\n                onClick={() => handleUpdateTodo(todo._id, todo.completed)}\n                style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\n              >\n                {todo.title}\n              </span>\n              <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './actions/todoActions';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [newTodo, setNewTodo] = useState('');\n  const [editTodo, setEditTodo] = useState(null);\n  const dispatch = useDispatch();\n  const {\n    todos,\n    loading,\n    error\n  } = useSelector(state => state.todos);\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n  const handleAddTodo = () => {\n    if (newTodo.trim()) {\n      dispatch(addTodo(newTodo));\n      setNewTodo('');\n    }\n  };\n  const handleUpdateTodo = updatedTodo => {\n    dispatch(updateTodo(updatedTodo._id, updatedTodo));\n  };\n  const handleDeleteTodo = id => {\n    dispatch(deleteTodo(id));\n  };\n  const openEditPopup = todo => {\n    setEditTodo(todo);\n  };\n  const closeEditPopup = () => {\n    setEditTodo(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleUpdateTodo({\n            ...todo,\n            completed: !todo.completed\n          }),\n          style: {\n            textDecoration: todo.completed ? 'line-through' : 'none',\n            cursor: 'pointer'\n          },\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openEditPopup(todo),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), editTodo && /*#__PURE__*/_jsxDEV(Popup, {\n      todo: editTodo,\n      onSave: handleUpdateTodo,\n      onClose: closeEditPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IIUTY9oBSsD2zLO3XYHUEdcbFBc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getTodos","addTodo","updateTodo","deleteTodo","Modal","jsxDEV","_jsxDEV","App","_s","newTodo","setNewTodo","editTodo","setEditTodo","dispatch","todos","loading","error","state","handleAddTodo","trim","handleUpdateTodo","updatedTodo","_id","handleDeleteTodo","id","openEditPopup","todo","closeEditPopup","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","style","color","map","completed","textDecoration","cursor","title","Popup","onSave","onClose","_c","$RefreshReg$"],"sources":["/Users/ashish/Desktop/rentkar/rentkar/src/App.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './actions/todoActions'\nfunction App() {\n  const [newTodo, setNewTodo] = useState('');\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos.todos);\n  const loading = useSelector(state => state.todos.loading);\n\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  const handleAddTodo = () => {\n    dispatch(addTodo(newTodo));\n    setNewTodo('');\n  };\n\n  const handleUpdateTodo = (id, completed) => {\n    dispatch(updateTodo(id, { completed: !completed }));\n  };\n\n  const handleDeleteTodo = (id) => {\n    dispatch(deleteTodo(id));\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {todos.map(todo => (\n            <li key={todo._id}>\n              <span\n                onClick={() => handleUpdateTodo(todo._id, todo.completed)}\n                style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\n              >\n                {todo.title}\n              </span>\n              <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './actions/todoActions';\nimport Modal from './Modal';\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState('');\n  const [editTodo, setEditTodo] = useState(null);\n  const dispatch = useDispatch();\n  const { todos, loading, error } = useSelector(state => state.todos);\n\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  const handleAddTodo = () => {\n    if (newTodo.trim()) {\n      dispatch(addTodo(newTodo));\n      setNewTodo('');\n    }\n  };\n\n  const handleUpdateTodo = (updatedTodo) => {\n    dispatch(updateTodo(updatedTodo._id, updatedTodo));\n  };\n\n  const handleDeleteTodo = (id) => {\n    dispatch(deleteTodo(id));\n  };\n\n  const openEditPopup = (todo) => {\n    setEditTodo(todo);\n  };\n\n  const closeEditPopup = () => {\n    setEditTodo(null);\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <button onClick={handleAddTodo}>Add Todo</button>\n\n      {loading && <p>Loading...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {!loading && !error && (\n        <ul>\n          {todos.map(todo => (\n            <li key={todo._id}>\n              <span\n                onClick={() => handleUpdateTodo({ ...todo, completed: !todo.completed })}\n                style={{ textDecoration: todo.completed ? 'line-through' : 'none', cursor: 'pointer' }}\n              >\n                {todo.title}\n              </span>\n              <button onClick={() => openEditPopup(todo)}>Edit</button>\n              <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {editTodo && (\n        <Popup\n          todo={editTodo}\n          onSave={handleUpdateTodo}\n          onClose={closeEditPopup}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}