{"ast":null,"code":"var _jsxFileName = \"/Users/ashish/Desktop/rentkar/rentkar/src/SabpaisaPaymentGateway.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PaymentInitModal } from \"pg-test-project\";\nimport { v4 as uuidv4 } from 'uuid';\nimport uniqid from 'uniqid';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SabpaisaPaymentGateway(props) {\n  _s();\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n  const [clientCode, setClientCode] = useState(props.clientCode);\n  const [transUserName, setTransUserName] = useState(props.transUserName);\n  const [transUserPassword, setTransUserPassword] = useState(props.transUserPassword);\n  const [authkey, setAuthkey] = useState(props.authkey);\n  const [authiv, setAuthiv] = useState(props.authiv);\n  const [payerName, setpayerName] = useState(props.payerName);\n  const [payerEmail, setpayerEmail] = useState(props.payerEmail);\n  const [payerMobile, setpayerMobile] = useState(props.payerMobile);\n  const [clientTxnId, setclientTxnId] = useState(props.clientTxnId);\n  const [amount, setamount] = useState(props.amount);\n  const [payerAddress, setpayerAddress] = useState(props.payerAddress);\n  const [callbackUrl, setCallbackUrl] = useState(props.callbackUrl);\n  const [amountType, setamountType] = useState(\"\");\n  const [udf1, setudf1] = useState(\"\");\n  const [udf2, setudf2] = useState(\"\");\n  const [udf3, setudf3] = useState(\"\");\n  const [udf4, setudf4] = useState(\"\");\n  const [udf5, setudf5] = useState(\"\");\n  const [udf6, setudf6] = useState(\"\");\n  const [udf7, setudf7] = useState(\"\");\n  const [udf8, setudf8] = useState(\"\");\n  const [udf9, setudf9] = useState(\"\");\n  const [udf10, setudf10] = useState(\"\");\n  const [udf11, setudf11] = useState(\"\");\n  const [udf12, setudf12] = useState(\"\"); // client id\n  const [udf13, setudf13] = useState(\"\"); // plan id\n  const [udf14, setudf14] = useState(\"\"); // plan name\n  const [udf15, setudf15] = useState(\"\"); // application id (product id)\n  const [udf16, setudf16] = useState(\"\"); // // client subscribe plan detail id(refer to DB)\n  const [udf17, setudf17] = useState(\"\"); // payment from the COB portal\n  const [udf18, setudf18] = useState(\"\");\n  const [udf19, setudf19] = useState(\"\");\n  const [udf20, setudf20] = useState(\"\");\n  const [channelId, setchannelId] = useState(\"\");\n  const [programId, setprogramId] = useState(\"\");\n  const [mcc, setmcc] = useState(\"\");\n  const location = useLocation();\n  useEffect(() => {\n    setIsOpen(props === null || props === void 0 ? void 0 : props.isOpen);\n  }, [props]);\n  const paymentCompleteHandler = () => {};\n  useEffect(() => {\n    // Create a URLSearchParams instance from the current location's search string\n    const params = new URLSearchParams(location.search);\n    // Get the value of the 'status' parameter\n    const status = params.get('status');\n\n    // Check if the status is 'SUCCESS'\n    if (status === 'SUCCESS') {\n      // Set the paymentSuccess state to true\n      // setPaymentSuccess(true);\n      // Optionally, store a flag in localStorage\n      localStorage.setItem('paymentSuccess', 'true');\n    } else {\n      // Optionally, clear the flag in localStorage if status is not 'SUCCESS'\n      localStorage.removeItem('paymentSuccess');\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \",\n    /*#__PURE__*/\n    //1) Testing with production enironment please pass env=\"prod\"\n    // 2)Testing with stageing enironment please pass env=\"\" or env=\"stage\"\n    // 3)Default it is going to catch env=\"\"\n    _jsxDEV(PaymentInitModal, {\n      clientCode: clientCode,\n      transUserPassword: transUserPassword,\n      transUserName: transUserName,\n      isOpen: isOpen,\n      clientTxnId: uniqid(),\n      authkey: authkey,\n      authiv: authiv,\n      payerName: payerName,\n      payerEmail: payerEmail,\n      payerMobile: payerMobile,\n      payerAddress: payerAddress,\n      amount: amount,\n      amountType: amountType,\n      udf12: udf12,\n      udf13: udf13,\n      udf14: udf14,\n      udf15: udf15,\n      udf16: udf16,\n      udf17: udf17,\n      onToggle: () => setIsOpen(!isOpen),\n      channelId: channelId,\n      programId: programId,\n      mcc: mcc,\n      label: \"Production\",\n      env: 'stag'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(SabpaisaPaymentGateway, \"NFnf0CR8ZvcArwBF/edEtg9iWIo=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SabpaisaPaymentGateway;\nexport default SabpaisaPaymentGateway;\nvar _c;\n$RefreshReg$(_c, \"SabpaisaPaymentGateway\");","map":{"version":3,"names":["React","useState","useEffect","PaymentInitModal","v4","uuidv4","uniqid","useNavigate","useLocation","jsxDEV","_jsxDEV","SabpaisaPaymentGateway","props","_s","navigate","isOpen","setIsOpen","clientCode","setClientCode","transUserName","setTransUserName","transUserPassword","setTransUserPassword","authkey","setAuthkey","authiv","setAuthiv","payerName","setpayerName","payerEmail","setpayerEmail","payerMobile","setpayerMobile","clientTxnId","setclientTxnId","amount","setamount","payerAddress","setpayerAddress","callbackUrl","setCallbackUrl","amountType","setamountType","udf1","setudf1","udf2","setudf2","udf3","setudf3","udf4","setudf4","udf5","setudf5","udf6","setudf6","udf7","setudf7","udf8","setudf8","udf9","setudf9","udf10","setudf10","udf11","setudf11","udf12","setudf12","udf13","setudf13","udf14","setudf14","udf15","setudf15","udf16","setudf16","udf17","setudf17","udf18","setudf18","udf19","setudf19","udf20","setudf20","channelId","setchannelId","programId","setprogramId","mcc","setmcc","location","paymentCompleteHandler","params","URLSearchParams","search","status","get","localStorage","setItem","removeItem","children","onToggle","label","env","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashish/Desktop/rentkar/rentkar/src/SabpaisaPaymentGateway.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { PaymentInitModal } from \"pg-test-project\";\nimport { v4 as uuidv4 } from 'uuid';\nimport uniqid from 'uniqid';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nfunction SabpaisaPaymentGateway(props) {\nconst navigate=useNavigate()\n  const [isOpen, setIsOpen] = useState(false);\n  const [clientCode, setClientCode] = useState(props.clientCode);\n  const [transUserName, setTransUserName] = useState(props.transUserName);\n  const [transUserPassword, setTransUserPassword] = useState(props.transUserPassword);\n  const [authkey, setAuthkey] = useState(props.authkey);\n  const [authiv, setAuthiv] = useState(props.authiv);\n  const [payerName, setpayerName] = useState(props.payerName);\n  const [payerEmail, setpayerEmail] = useState(props.payerEmail);\n  const [payerMobile, setpayerMobile] = useState(props.payerMobile);\n  const [clientTxnId, setclientTxnId] = useState(props.clientTxnId);\n  const [amount, setamount] = useState(props.amount);\n  const [payerAddress, setpayerAddress] = useState(props.payerAddress);\n  const [callbackUrl, setCallbackUrl] = useState(props.callbackUrl);\n  const [amountType, setamountType] = useState(\"\");\n  const [udf1, setudf1] = useState(\"\");\n  const [udf2, setudf2] = useState(\"\");\n  const [udf3, setudf3] = useState(\"\");\n  const [udf4, setudf4] = useState(\"\");\n  const [udf5, setudf5] = useState(\"\");\n  const [udf6, setudf6] = useState(\"\");\n  const [udf7, setudf7] = useState(\"\");\n  const [udf8, setudf8] = useState(\"\");\n  const [udf9, setudf9] = useState(\"\");\n  const [udf10, setudf10] = useState(\"\");\n  const [udf11, setudf11] = useState(\"\");\n  const [udf12, setudf12] = useState(\"\"); // client id\n  const [udf13, setudf13] = useState(\"\"); // plan id\n  const [udf14, setudf14] = useState(\"\"); // plan name\n  const [udf15, setudf15] = useState(\"\"); // application id (product id)\n  const [udf16, setudf16] = useState(\"\"); // // client subscribe plan detail id(refer to DB)\n  const [udf17, setudf17] = useState(\"\"); // payment from the COB portal\n  const [udf18, setudf18] = useState(\"\");\n  const [udf19, setudf19] = useState(\"\");\n  const [udf20, setudf20] = useState(\"\");\n  const [channelId, setchannelId] = useState(\"\");\n  const [programId, setprogramId] = useState(\"\");\n  const [mcc, setmcc] = useState(\"\");\n  const location = useLocation();\n\n  useEffect(() => {\n\n    setIsOpen(props?.isOpen)\n\n  }, [props])\n  const paymentCompleteHandler=()=>{\n    \n  }\n  useEffect(() => {\n    // Create a URLSearchParams instance from the current location's search string\n    const params = new URLSearchParams(location.search);\n    // Get the value of the 'status' parameter\n    const status = params.get('status');\n\n    // Check if the status is 'SUCCESS'\n    if (status === 'SUCCESS') {\n      // Set the paymentSuccess state to true\n     // setPaymentSuccess(true);\n      // Optionally, store a flag in localStorage\n      localStorage.setItem('paymentSuccess', 'true');\n    } else {\n      // Optionally, clear the flag in localStorage if status is not 'SUCCESS'\n      localStorage.removeItem('paymentSuccess');\n    }\n  }, [location]);\n\n  return (\n    <div> {\n      //1) Testing with production enironment please pass env=\"prod\"\n      // 2)Testing with stageing enironment please pass env=\"\" or env=\"stage\"\n      // 3)Default it is going to catch env=\"\"\n      <PaymentInitModal\n        clientCode={clientCode}\n        transUserPassword={transUserPassword}\n        transUserName={transUserName}\n        isOpen={isOpen}\n        clientTxnId={uniqid()}\n        authkey={authkey}\n        authiv={authiv}\n        payerName={payerName}\n        payerEmail={payerEmail}\n        payerMobile={payerMobile}\n        payerAddress={payerAddress}\n        amount={amount}\n        amountType={amountType}\n        udf12={udf12}\n        udf13={udf13}\n        udf14={udf14}\n        udf15={udf15}\n        udf16={udf16}\n        udf17={udf17}\n        onToggle={() => setIsOpen(!isOpen)}\n        channelId={channelId}\n        programId={programId}\n        mcc={mcc}\n        label={\"Production\"}\n        env={'stag'}\n\n      />\n    }</div>\n\n\n\n\n  )\n}\n\nexport default SabpaisaPaymentGateway\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}